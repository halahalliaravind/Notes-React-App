{"version":3,"sources":["components/DisplayNotes/DisplayNotes.js","components/AddNotes/AddNotes.js","App.js","serviceWorker.js","index.js"],"names":["DisplayNotes","props","state","className","this","FullData","map","value","title","data","time","id","highlightClassName","searchWords","search","autoEscape","textToHighlight","onClick","e","editFunc","color","deleteFunc","Component","AddNotes","handleSearchChange","event","target","searchedArray","temp","filter","includes","setState","handleDataChange","handleTitleChange","save","edit","index","findIndex","parseInt","clearNotesArea","idCount","obj","Date","toLocaleString","replace","unshift","splice","Fragment","placeholder","onChange","type","cols","rows","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.59aab6a3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./displaynotes.css\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { MdDelete } from \"react-icons/md\";\r\n\r\nexport default class DisplayNotes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"current-notes-body\">\r\n        {this.props.FullData.map((value) => {\r\n          const { title, data, time, id } = value;\r\n          return (\r\n            <div className=\"archive-note-with-buttons\">\r\n              <div>\r\n                <div className=\"title-wrapper\">\r\n                  <Highlighter\r\n                    highlightClassName=\"YourHighlightClass title-data\"\r\n                    searchWords={[this.props.search]}\r\n                    autoEscape={true}\r\n                    textToHighlight={title}\r\n                  />\r\n                </div>\r\n                <div className=\"archive-data\">{data}</div>\r\n                <div className=\"archive-time\">{time}</div>\r\n              </div>\r\n              <div className=\"edit-delete-wrapper\">\r\n                <span className=\"edit-button\">\r\n                  <FaEdit onClick={(e) => this.props.editFunc(e)} id={id} color='yellow' />\r\n                </span>\r\n                <span className=\"delete-button\">\r\n                  <MdDelete onClick={(e) => this.props.deleteFunc(e)} id={id} color='red' />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./addnotes.css\";\r\nimport DisplayNotes from \"../DisplayNotes/DisplayNotes\";\r\n\r\nclass AddNotes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      temp: [],\r\n      search: \"\",\r\n      title: \"\",\r\n      edit: \"\",\r\n      data: \"\",\r\n      time: \"\",\r\n      id: 0,\r\n      FullData: [],\r\n    };\r\n  }\r\n  handleSearchChange = (event) => {\r\n    if (event.target.value !== \"\") {\r\n      var searchedArray = this.state.temp.filter((value) =>\r\n        value.title.includes(event.target.value)\r\n      );\r\n\r\n      this.setState({\r\n        search: event.target.value,\r\n        FullData: searchedArray,\r\n      });\r\n    } else {\r\n      let temp = this.state.temp;\r\n      this.setState({\r\n        search: \"\",\r\n        FullData: temp,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDataChange = (event) => {\r\n    this.setState({ data: event.target.value });\r\n  };\r\n\r\n  handleTitleChange = (event) => {\r\n    this.setState({ title: event.target.value });\r\n  };\r\n\r\n  save = () => {\r\n    if (this.state.edit && this.state.data !== \"\" && this.state.title !== \"\") {\r\n      let data = this.state.temp;\r\n\r\n      var index = data.findIndex(\r\n        (value) => value.id === parseInt(this.state.id)\r\n      );\r\n\r\n      data[index].title = this.state.title;\r\n      data[index].data = this.state.data;\r\n      data[index].time = this.state.time;\r\n      data[index].edit = false;\r\n\r\n      this.setState({\r\n        temp: data,\r\n        FullData: data,\r\n      });\r\n      this.clearNotesArea();\r\n    } else if (this.state.data !== \"\" && this.state.title !== \"\") {\r\n      var idCount = this.state.id;\r\n      idCount += 1;\r\n      var obj = {\r\n        title: this.state.title,\r\n        data: this.state.data,\r\n        time: new Date().toLocaleString().replace(\",\", \"\").replace(/:.. /, \" \"),\r\n        id: idCount,\r\n      };\r\n      var data = [];\r\n      data = this.state.temp;\r\n      data.unshift(obj);\r\n\r\n      this.setState({\r\n        FullData: data,\r\n        temp: data,\r\n        id: idCount,\r\n      });\r\n      this.clearNotesArea();\r\n    }\r\n  };\r\n  clearNotesArea = () => {\r\n    this.setState({\r\n      // search: \"\",\r\n      title: \"\",\r\n      data: \"\",\r\n      time: \"\",\r\n      edit: false,\r\n    });\r\n  };\r\n\r\n  editFunc = (event) => {\r\n    var index = this.state.temp.findIndex(\r\n      (value) => value.id === parseInt(event.target.id)\r\n    );\r\n    var data = this.state.temp[index];\r\n    this.setState({\r\n      search: \"\",\r\n      title: data.title,\r\n      data: data.data,\r\n      time: data.time,\r\n      id: data.id,\r\n      edit: true,\r\n    });\r\n  };\r\n\r\n  deleteFunc = (event) => {\r\n    if (!this.state.edit) {\r\n      var index = this.state.temp.findIndex(\r\n        (value) => value.id === parseInt(event.target.id)\r\n      );\r\n      var data = this.state.temp;\r\n      data.splice(index, 1);\r\n      this.setState({\r\n        search: \"\",\r\n        temp: data,\r\n        FullData: data,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"search-wrapper\">\r\n          <input\r\n            placeholder=\"Search Notes by Title......\"\r\n            className=\"search-bar\"\r\n            value={this.state.search}\r\n            onChange={this.handleSearchChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"title-input\"\r\n            type=\"type\"\r\n            placeholder=\"Title...\"\r\n            value={this.state.title}\r\n            onChange={this.handleTitleChange}\r\n          />\r\n          <br />\r\n          <textarea\r\n            className=\"details-input\"\r\n            cols=\"20\"\r\n            rows=\"3\"\r\n            placeholder=\"Enter your note here...\"\r\n            value={this.state.data}\r\n            onChange={this.handleDataChange}\r\n          />\r\n          <br />\r\n          <button className=\"btn btn-four blue\" onClick={this.save}>\r\n            Save Note\r\n          </button>\r\n        </div>\r\n        <DisplayNotes\r\n          search={this.state.search}\r\n          FullData={this.state.FullData}\r\n          deleteFunc={this.deleteFunc}\r\n          editFunc={this.editFunc}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNotes;\r\n","import React, { Component } from \"react\";\n\nimport \"./App.css\";\nimport AddNotes from \"./components/AddNotes/AddNotes\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <AddNotes />\n        <footer>\n          {\" \"}\n          <span>React-Notes-App@newtonSchool</span>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}